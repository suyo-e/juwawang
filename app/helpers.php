<?php

/**
 * Global helpers file with misc functions.
 */
if (! function_exists('app_name')) {
    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function app_name()
    {
        return config('app.name');
    }
}

if (! function_exists('access')) {
    /**
     * Access (lol) the Access:: facade as a simple function.
     */
    function access()
    {
        return app('access');
    }
}

if (! function_exists('history')) {
    /**
     * Access the history facade anywhere.
     */
    function history()
    {
        return app('history');
    }
}

if (! function_exists('gravatar')) {
    /**
     * Access the gravatar helper.
     */
    function gravatar()
    {
        return app('gravatar');
    }
}

if (! function_exists('includeRouteFiles')) {

    /**
     * Loops through a folder and requires all PHP files
     * Searches sub-directories as well.
     *
     * @param $folder
     */
    function includeRouteFiles($folder)
    {
        $directory = $folder;
        $handle = opendir($directory);
        $directory_list = [$directory];

        while (false !== ($filename = readdir($handle))) {
            if ($filename != '.' && $filename != '..' && is_dir($directory.$filename)) {
                array_push($directory_list, $directory.$filename.'/');
            }
        }

        foreach ($directory_list as $directory) {
            foreach (glob($directory.'*.php') as $filename) {
                require $filename;
            }
        }
    }
}

if (! function_exists('getRtlCss')) {

    /**
     * The path being passed is generated by Laravel Mix manifest file
     * The webpack plugin takes the css filenames and appends rtl before the .css extension
     * So we take the original and place that in and send back the path.
     *
     * @param $path
     *
     * @return string
     */
    function getRtlCss($path)
    {
        $path = explode('/', $path);
        $filename = end($path);
        array_pop($path);
        $filename = rtrim($filename, '.css');

        return implode('/', $path).'/'.$filename.'.rtl.css';
    }
}

if (! function_exists('upload')) {
    function upload($request, $name) {
        $image_path = '/files';
        $path = '';
        if ($request->hasFile($name) && $request->file($name)->isValid()){
            $extension = $request->$name->extension();
            $filename = md5(time(). '-' . $request->$name->getClientOriginalName()) .".".$extension ;
            $request->file($name)->move(public_path($image_path), $filename);
            $path = $image_path."/$filename";
        }

        return $path;
    }
}

if (! function_exists('render_image')) {
    function render_image(){
        return 'data!=""?"<img src=\""+data+"\" height=\"50\"/>":"暂无图片"';
    }
}

if (! function_exists('render_category_type')) {
    function render_category_type() {
        return 'function(data) {
            switch(data){
            case '.\App\Models\Backend\Category::TYPE_USER.':
                return "用户注册";
            case '.\App\Models\Backend\Category::TYPE_AGENT.':
                return "代理商注册";
            case '.\App\Models\Backend\Category::TYPE_MANUFACTURER.':
                return "厂商注册";
            case '.\App\Models\Backend\Category::TYPE_USER_PRODUCT.':
                return "用户商品发布";
            case '.\App\Models\Backend\Category::TYPE_AGENT_PRODUCT.':
                return "代理商商品发布";
            case '.\App\Models\Backend\Category::TYPE_MANUFACTURER_PRODUCT.':
                return "厂商商品发布";
            default:
                return data;
            }
        }(data);';
    }
}

if(! function_exists('province_city')) {
    function province_city($province_city){
        $province_city = explode(',', $province_city);
        $data = array();
        $data['prov_id'] = isset($province_city[0]) ? $province_city[0]: '';
        $data['city_id'] = isset($province_city[1]) ? $province_city[1]: '';
        $data['area_id'] = isset($province_city[2]) ? $province_city[2]: '';

        return $data;
    }
}

if(! function_exists('get_product_types')){ 
    function get_product_types( $profile_type ) {

        switch($profile_type) {
        //用户只能看用户和经销商
        case \App\Models\Backend\Category::TYPE_USER:
            return array(
                \App\Models\Backend\Category::TYPE_USER_PRODUCT,
                \App\Models\Backend\Category::TYPE_AGENT_PRODUCT
            );
        //经销商看全部
        case \App\Models\Backend\Category::TYPE_AGENT:
            return array(
                \App\Models\Backend\Category::TYPE_USER_PRODUCT,
                \App\Models\Backend\Category::TYPE_AGENT_PRODUCT,
                \App\Models\Backend\Category::TYPE_MANUFACTURER_PRODUCT
            );
        case \App\Models\Backend\Category::TYPE_MANUFACTURER:
            return array(\App\Models\Backend\Category::TYPE_MANUFACTURER_PRODUCT);
        default:
            return null;
        }
    }
}
